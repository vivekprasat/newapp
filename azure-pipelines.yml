trigger:
- main

variables:
  azureSubscription: azuredevops
  webAppName: 'storageapp'
  environmentName: 'storageapp'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      name: my agent
      # demands:
      #   - agent.name -equals 'vivek'
    steps:
    - task: Maven@4
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'Path'
        jdkDirectory: '/usr/lib/jvm/java-17-openjdk-amd64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'clean package'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/target/*.war
          **/target/*.jar
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool:
      name: my agent
      # demands:
      #   - agent.name -equals 'vivek'
    strategy:
      runOnce:
        deploy:
          steps:
          #   - task: DownloadBuildArtifacts@1
          #     inputs:
          #       buildType: 'current'
          #       downloadType: 'specific'
          #       downloadPath: '$(System.ArtifactsDirectory)'
          #       cleanDestinationFolder: true

            - task: AzureRmWebAppDeployment@5
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'azuredevops'
                appType: 'webAppLinux'
                WebAppName: 'storageapp'
                packageForLinux: '$(Pipeline.Workspace)/drop/**/*.*ar'
                DeploymentTypeLinux: 'oneDeploy'
          # - task: AzureWebApp@1
          #   displayName: 'Azure Web App Deploy: storageapp'
          #   inputs:
          #     azureSubscription: $(azureSubscription)
          #     appType: webAppLinux
          #     appName: $(webAppName)
          #     package: '$(Pipeline.Workspace)/drop/**/*.*ar'
